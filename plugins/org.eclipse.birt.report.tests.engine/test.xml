<?xml version="1.0"?>

<project name="testsuite" default="run" basedir=".">
	<!-- The property ${eclipse-home} should be passed into this script -->
	<!-- Set a meaningful default value for when it is not. -->
	<property name="eclipse-home" location="../.."/>
	<property name="JAVA_HOME" value="C:/j2sdk1.4.2_10" />
	<!--property name="axlan-home" value="C:/apps/apache-ant-1.6.2/lib"/-->
	<!-- sets the properties eclipse-home, and library-file -->
	<property name="plugin-name" value="org.eclipse.birt.report.tests.engine"/>
	<property name="jar-name" value="EngineTest"/>
	<property name="class-to-test" value="org.eclipse.birt.report.tests.engine.AllTests"/>
	
	<property name="test.src.dir" value="./src" />
	<property name="test.build.dir" value="./bin" />
	<property name="test.doc.dir" value="./doc" />
	<property name="test.report.dir" value="./report" />
	<property name="test.lib.dir" value="./lib" />
	
	<property name="eclipse.plugin.tests" value="${eclipse-home}/plugins/${plugin-name}" />
	
	<property name="library-file" value="${eclipse-home}/plugins/org.eclipse.test/library.xml"/>
	
	<!--class path for class/jar needed in tests -->
	<property name="core.dir" location="${eclipse-home}/plugins/org.eclipse.birt.core" />
	<property name="data.oda.dir" location="${eclipse-home}/plugins/org.eclipse.birt.data.oda" />
	<property name="data.oda.jdbc.dir" location="${eclipse-home}/plugins/org.eclipse.birt.report.data.oda.jdbc" />
	<property name="datatools.connectivity.oda.dir" location="${eclipse-home}/plugins/org.eclipse.datatools.connectivity.oda" />	
	<property name="module.dir" location = "${eclipse-home}/plugins/org.eclipse.birt.report.engine" />
	
	<path id="class.path">
		<fileset dir="${test.lib.dir}">
			<include name="*.jar" />
		</fileset>	
		<pathelement path="${test.build.dir}" />
		<pathelement path="${core.dir}\core.jar" />
		<pathelement path="${core.dir}\lib\js.jar" />
		<pathelement path="${core.dir}\lib\junit.jar" />
		<pathelement path="${data.oda.dir}\oda.jar" />
		<pathelement path="${data.oda.jdbc.dir}\*.jar" />
		<pathelement path="${datatools.connectivity.oda.dir}\oda.jar" />
<!--
		<fileset dir="${eclipse-home}/plugins">
				<include name="org.eclipse.core.runtime_*/runtime.jar"/>
				<include name="org.eclipse.osgi_*/*.jar"/>
				<include name="org.eclipse.core.runtime*.jar"/>
				<include name="org.eclipse.osgi*.jar"/>
		</fileset>	
	
		<fileset dir="${module.dir}">
			<include name="engine.jar" />
			<include name="lib/*.jar" />
		</fileset>	

-->		
		<fileset dir="${eclipse-home}/plugins/">
			<include name="com.ibm.icu*.jar" />			
			<include name="org.eclipse.birt.core/*.jar" />
			<include name="org.eclipse.birt.data.oda/*.jar" />			  	
			<include name="org.eclipse.birt.data.oda.adapter.dtp/*.jar" />
			<include name="org.eclipse.birt.report.data.oda.jdbc/*.jar" />
			<include name="org.eclipse.birt.report.data.oda.sampledb/*.jar" />		
			<include name="org.eclipse.birt.data/*.jar" />
			<include name="org.eclipse.birt.report.model/*.jar" />
			<include name="org.eclipse.birt.report.engine/*.jar" />
		</fileset>
		
	</path>

	<!-- set platform related properties-->
	<property name="arch" value="x86" />
  	<condition property="ws" value="win32">
    	<os family="windows"/>
	</condition>
	<condition property="ws" value="gtk">
		<not>
			<os family="windows"/>
		</not>
	</condition>
	<condition property="os" value="win32">
		<os family="windows"/>
	</condition>
	<condition property="os" value="linux">
		<not>
			<os family="windows"/>
		</not>
	</condition>
	<property name="nl" value="en_US" />   
  
	<!-- This target holds all initialization code that needs to be done for -->
	<!-- all tests that are to be run. Initialization for individual tests -->
	<!-- should be done within the body of the suite target. -->
	<target name="init">
		<tstamp/>
	</target>

	<!-- This target defines the tests that need to be run. -->
	<target name="UnitTest">
		<echo message="${library-file}"  />
		<property name="birt-model-folder" value="${eclipse-home}/birt-model-folder"/>
		<delete dir="${birt-model-folder}" quiet="true"/>
		
		<ant target="core-test" antfile="${library-file}" dir="${eclipse-home}">
			<property name="data-dir" value="${birt-model-folder}"/>
			<property name="plugin-name" value="${plugin-name}"/>
			<property name="classname" value="${class-to-test}"/>
			<property name="vmargs" value="-DBIRT_HOME='${eclipse-home}'"/>
			<property name="vmargs" value="-Declipse.home='${eclipse-home}'"/>
		</ant>
	</target>

	<target name="compileTest">
		<delete dir="${test.build.dir}" />
		<mkdir dir="${test.build.dir}" />
		<!-- Copy resource files into build -->
		<copy todir="${test.build.dir}">
			<fileset dir="${test.src.dir}">
				<include name="**/input/*.*" />
				<include name="**/golden/*.*" />
				<include name="**/output/*.*" />
				<include name="**/*.properties" />
				<!--exclude name="org.eclipse.birt.report.tests.engine.smoke"/-->
				<!--exclude name="org.eclipse.birt.report.tests.engine.emitter.*"/-->
			</fileset>
		</copy>

		<!-- Compile API Test Source Files -->
		<echo message="${JAVA_HOME}" />
		<javac srcdir="${test.src.dir}" destdir="${test.build.dir}" executable="${JAVA_HOME}/bin/javac"  source="1.4" target="1.4" debug="true" encoding="gb2312" failonerror="true">
			<classpath refid="class.path" />
		</javac>
	</target>

	<target name="APIJavadoc">
		<!--EngineTest.jar   -->
		<jar destfile="${jar-name}.jar" >
			<fileset dir="${test.build.dir}">
				<include name="**/*.class"/>
			</fileset>
		</jar>
		
    	<mkdir dir="${test.doc.dir}" />
		<javadoc packagenames="${plugin-name}.*"
			sourcepath="${test.src.dir}"
			defaultexcludes="yes"
			destdir="${test.doc.dir}"
			author="true"
			version="true"
			use="true"
			windowtitle="BIRT API Test---" >
			<classpath>
				<fileset dir="${test.lib.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javadoc>
		
	</target>
  
	<target name="Report">
		<delete dir="${test.report.dir}" />
		<mkdir dir="${test.report.dir}" />
		
		<junitreport todir="${test.report.dir}">
			<fileset dir="${eclipse-home}">
				<include name="${class-to-test}*.xml" />
				<exclude name="*TestSuites.xml" />
			</fileset>
			
			<report format="frames" todir="${test.report.dir}" />
		</junitreport>
	</target>

	<!-- This target holds code to cleanup the testing environment after -->
	<!-- after all of the tests have been run. You can use this target to -->
	<!-- delete temporary files that have been created. -->
	<target name="Clean">
		<delete>
			<fileset dir="${eclipse-home}" includes="org*.xml"/>
		</delete>
		<delete dir="${test.build.dir}" />
		<delete dir="${test.report.dir}"/>
		<delete dir="${test.doc.dir}"/>
		<delete file="${jar-name}.jar" />
	</target>

	<!-- This target runs the test suite. Any actions that need to happen -->
	<!-- after all the tests have been run should go here. -->
	<target name="run" depends="init,compileTest,APIJavadoc,UnitTest,Report">
		<!--ant target="collect" antfile="${library-file}" dir="${eclipse-home}">
			<property name="includes" value="org*.xml"/>
			<property name="output-file" value="${plugin-name}.xml"/>
		</ant-->
	</target>

</project>
