<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.data
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *        -Ddtp.home=<your DTP plugins source home>   [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->

<project name="BIRT Data Engine Project" default="UnitTest" basedir=".">
    <description>BIRT Data Engine Project.</description>
	<property file="build.properties"/>		
	
	<!-- set global properties for this build -->
    <!-- Public properties, used by public targets, top level build script will pass on the value 
	 	 at runtime. Properties will have there default value:
		     eclipse.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	
	<!-- ===== Default value for public properties ============= -->
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="api.javadoc.dir" location="docs/birt/api"/>
	<property name="plugin.version" value="1.0.1" />
	<property name="export.dir" location="export" />

	<property name="eclipse.home" location="." />
	<property name="dtp.home" location=".." />
	
	<property name="core.dir" location="../org.eclipse.birt.core" />
	<property name="dtp.oda.dir" location="${dtp.home}/org.eclipse.datatools.connectivity.oda" />
	<property name="oda.jdbc.dir" location="../org.eclipse.birt.report.data.oda.jdbc" />
	<property name="module.name" value = "org.eclipse.birt.data" />
	<property name="src" location="test" />
	<property name="test.src" location="test" />
	
	<path id="class.path">
		<pathelement path="${bin}" />
		<fileset dir="${core.dir}">
			<include name="core.jar"/>
		</fileset>
		<fileset dir="${core.dir}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${dtp.oda.dir}">
			<include name="oda.jar"/>
			<include name="odaconsumer-helper.jar"/>
		</fileset>
		<fileset dir="${birt.oda.dir}">
			<include name="oda.jar"/>
		</fileset>	
		<fileset dir="${oda.jdbc.dir}">
			<include name="derby.jar"/>
		</fileset>
		<fileset dir="${dte.dir}">
			<include name="dte.jar"/>
		</fileset>	

		<!-- dependend on eclipse due to Plugin class -->
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.core.runtime_*/runtime.jar"/>
			<include name="org.eclipse.osgi_*/*.jar"/>
			<include name="org.eclipse.core.runtime*.jar"/>
			<include name="org.eclipse.osgi*.jar"/>
		</fileset>
		
	</path>
	
	<path id="class.path.test">
		<path refid="class.path" />
		<fileset dir="${core.dir}">
			<include name="lib/*.jar"/>
		</fileset>
	</path>

	<!-- public task UnitTest will not explicitly depend on complie, Top level script should call compile before calling UnitTest -->
	<!-- Run Unit test.
			 Parameters:
			 		- ${utest.report.dir} target directory to put the unit test report
	-->
	<target name="UnitTest" depends="compileTest, testDependency" description="run all the unit tests">
		
		<!-- run all tests in current directory -->
		<!-- Create the log directory -->
		<delete dir="${utest.report.dir}"/>
		<mkdir dir="${utest.report.dir}" />

		<!-- If condition is satisfied, then executes test cases against JDBC -->
		<antcall target="testJDBC"/>

	</target>
	
	<!-- Clean all objects created by this script -->
	<target name="Clean" depends="init" description="clean up">
		<antcall target="cleanBuild"/>
		<antcall target="cleanUnitTest"/>
	</target>
	
	<target name="init" description="initialization">
		<condition property="url_isset">
			<isset property="url" />
		</condition>
		<condition property="url" value="${def_url}">
			<isfalse value="${url_isset}" />
		</condition>
		<condition property="logdir_isset">
			<isset property="logdir" />
		</condition>
		<condition property="logdir" value="${def_logdir}">
			<isfalse value="${logdir_isset}" />
		</condition>
		<condition property="database_isset">
			<isset property="database" />
		</condition>
		<condition property="database" value="${def_database}">
			<isfalse value="${database_isset}" />
		</condition>
		<condition property="user_isset">
			<isset property="user" />
		</condition>
		<condition property="user" value="${def_user}">
			<isfalse value="${user_isset}" />
		</condition>
		<condition property="password_isset">
			<isset property="password" />
		</condition>
		<condition property="password" value="${def_password}">
			<isfalse value="${password_isset}" />
		</condition>
		<condition property="host_isset">
			<isset property="host" />
		</condition>
		<condition property="host" value="${def_host}">
			<isfalse value="${host_isset}" />
		</condition>
	</target>

	<!-- Compile Data Test Files 
		 javac.failonerror should be true.
	-->
	<target name="compileTest" depends="init, buildDependency" description="compile the test ">
		<mkdir dir="${bin}" />
		
		<javac srcdir="${test.src}"
			   destdir="${bin}" 
			   encoding="utf-8" 
			   source="1.4" 
			   failonerror="true"
			   debug="true">
			<classpath refid="class.path" />
		</javac>
	</target>
		
	<target name="testJDBC">
		<echo>Run jUnit test cases against JDBC</echo>
		
		<!-- run junit for each testcase -->
		<junit dir="." fork="yes" taskname="Data Engine Tests">
			<jvmarg value="-ea" />
			<sysproperty key="DTETest.url" value="${url}" />
			<sysproperty key="DTETest.user" value="${user}" />
			<sysproperty key="DTETEst.password" value="${password}" />
			<sysproperty key="DTETest.host" value="${host}" />
			<sysproperty key="DTETest.database" value="${database}" />
			
			<!-- The property "instance" has not been defined. ??-->
			<sysproperty key="DTETest.instace" value="${instance}" />
			
			<sysproperty key="DTETest.driverLoc" value="${driverLoc}" />
			<sysproperty key="DTETest.testSource" value="JDBC"/>
			<classpath refid="class.path.test" />
			<formatter type="xml" />
			<batchtest todir="${utest.report.dir}">
				<fileset dir="${test.src}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="cleanBuild" description= "clean files generated by build">
		<delete dir="${bin}"/>
	</target>
	<target name="cleanUnitTest" description= "clean files generated by unit tests">
		<delete dir="${utest.report.dir}" />
		<delete>
			<fileset dir="." includes="*junit*" />
		</delete>
	</target>
	
	<target name="buildDependency">
		<echo message="start call Jar task in ${core.dir}"/>
		<ant dir="${core.dir}" antfile="BuildCore.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${core.dir}"/>
		
		<echo message="start call Jar task in ${dtp.oda.dir}"/>
		<ant dir="${dtp.oda.dir}" antfile ="build.xml" target="build.jars" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${dtp.oda.dir}"/>
		
		<echo message="start call Jar task in ${dte.dir}"/>
		<ant dir="${dte.dir}" antfile ="BuildData.xml" target="JarAll" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${dte.dir}"/>
	</target>
	
	<target name="testDependency">
		<echo message="start call Jar task in ${birt.oda.dir}"/>		
		<ant dir="${birt.oda.dir}" antfile="BuildOda.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${birt.oda.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda/${birt.oda.jar}" file="${birt.oda.dir}/${birt.oda.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda/plugin.xml" file="${birt.oda.dir}/plugin.xml"/>
		
		<echo message="start call Jar task in ${dtp.oda.adapter.dir}"/>		
		<ant dir="${dtp.oda.adapter.dir}" antfile="BuildDtpOdaAdapter.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${oda.dtp.adapter.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda.adapter.dtp/${dtp.oda.adapter.jar}" file="${dtp.oda.adapter.dir}/${dtp.oda.adapter.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda.adapter.dtp/plugin.xml" file="${dtp.oda.adapter.dir}/plugin.xml"/>

		
		<echo message="start call Jar task in ${oda.jdbc.dir}"/>		
		<ant dir="${oda.jdbc.dir}" antfile="BuildOdaJdbc.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${oda.jdbc.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.jdbc/${oda.jdbc.jar}" file="${oda.jdbc.dir}/${oda.jdbc.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.jdbc/plugin.xml" file="${oda.jdbc.dir}/plugin.xml"/>
		
		<echo message="start call Jar task in ${oda.flatfile.dir}"/>		
		<ant dir="${oda.flatfile.dir}" antfile="BuildOdaFlatfile.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${oda.flatfile.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.flatfile/${oda.flatfile.jar}" file="${oda.flatfile.dir}/${oda.flatfile.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.flatfile/plugin.xml" file="${oda.flatfile.dir}/plugin.xml"/>
	</target>
</project>

