<?xml version="1.0"?>

<project name="Birt Test Chart Project" basedir="." default="utest">

	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.

		     eclipse.home
		     dtp.home
		     test.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	<!--properties -->

	<!-- ===== Default value for public properties ============= -->
	<property name="test.report.dir" location="report" />
	<property name="test.report.xml.dir" location="${test.report.dir}/xml" />

	<property name="eclipse.home" location="." />
	<property name="dtp.home" location=".." />

	<property name="utest.report.dir" location="utestreports"/>
	
	<property name="core.dir" location="../org.eclipse.birt.core" />
	<property name="data.oda.dir" location="../org.eclipse.birt.data.oda" />
	<property name="data.oda.jdbc.dir" location="../org.eclipse.birt.report.data.oda.jdbc" />
	<property name="datatools.connectivity.oda.dir" location="../org.eclipse.datatools.connectivity.oda" />
	<property name="testmodule.name" value="org.eclipse.birt.report.tests.chart" />

	<property name="chart.engine.dir" location="../org.eclipse.birt.chart.engine" />
	<property name="chart.engine.extension.dir" location="../org.eclipse.birt.chart.engine.extension" />
	<property name="chart.device.extension.dir" location="../org.eclipse.birt.chart.device.extension" />


	<property name="src" location="src" />
	<property name="bin" location="bin" />

	<!-- Class Path -->
	<path id="class.path">
		<pathelement path="${bin}" />

		<fileset dir="../org.mozilla.rhino">
			<include name="lib/*.jar" />
		</fileset>

		<fileset dir="..">
			<include name="org.eclipse.birt.chart.reportitem/reportitem.jar" />
			<include name="org.eclipse.birt.chart.device.extension/*.jar" />
			<include name="org.eclipse.birt.chart.engine.extension/*.jar" />
			<include name="org.eclipse.birt.chart.engine/*.jar" />
			<include name="org.eclipse.birt.core/*.jar" />
		</fileset>

		<fileset dir="${eclipse.home}/plugins">
			<include name="com.ibm.icu_*.jar" />
			<include name="org.eclipse.emf*.jar" />
		</fileset>
	</path>

	<!-- Compile Model Test Files 
		 javac.failonerror should be true.
	-->
	<target name="compileTest" description="Compile test codes" depends="buildDependents">
		<mkdir dir="${bin}" />

		<copy todir="${bin}">
			<fileset dir="${src}">
				<include name="**/input/*.*" />
				<include name="**/golden/*.*" />
				<include name="**/*.properties" />
			</fileset>
		</copy>

		<javac srcdir="${src}" destdir="${bin}" source="1.4" target="1.4" debug="true" encoding="utf-8" failonerror="true">
			<classpath refid="class.path" />
		</javac>
	</target>

	<target name="UnitTest">
		<java fork="true" classname="org.eclipse.birt.report.tests.chart.AllTests">
			<jvmarg value="-DSTANDALONE" />

			<classpath refid="class.path" />
		</java>
	</target>

	<target name="Report">
		<copy todir="${utest.report.dir}/acceptance" failonerror="false">
			<fileset dir="acceptance" />
		</copy>
	</target>

	<!-- Clean the build environment -->
	<target name="Clean">
		<delete dir="${bin}" />
		<delete dir="${test.report.dir}" />
	</target>


	<!-- Build the dependent projects -->
	<target name="buildDependents" description="Build all the projects it depends on">
		<echo message="start call Jar task in ${chart.engine.extension.dir}" level="info" />
		<ant dir="${chart.engine.extension.dir}" antfile="BuildChartEngineExtension.xml" target="Jar" inheritall="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${chart.engine.extension.dir}" level="info" />

		<echo message="start call Jar task in ${chart.device.extension.dir}" level="info" />
		<ant dir="${chart.device.extension.dir}" antfile="BuildChartDeviceExtension.xml" target="Jar" inheritall="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${chart.device.extension.dir}" level="info" />
	</target>


	<!-- private task, run unit test -->
	<target name="utest" depends="compileTest,UnitTest">
		<!--fail if="test.failed" message="One or more tests failed!  Check the output." /-->
	</target>
</project>